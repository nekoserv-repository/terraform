---
- name: bootstrap to {{ my_host }}
  hosts: localhost
  gather_facts: no

  tasks:
    - name: add target host
      ansible.builtin.add_host:
        hostname: "{{ my_host }}"
        ansible_ssh_host: "{{ my_host }}"

- name: install-traefik
  hosts: all
  gather_facts: no
  vars:
    ansible_user: root

  tasks:
    - name: generate tfvars
      ansible.builtin.raw: echo "{{ tf_vars }}" > terraform.tfvars
      delegate_to: localhost

    - name: terraform plan
      ansible.builtin.raw: terraform plan -out 'plan'
      delegate_to: localhost
      register: terraform_plan
      changed_when: "'no changes' not in terraform_plan.stdout"

    - name: terraform apply plan
      ansible.builtin.raw: terraform apply plan
      delegate_to: localhost
      register: terraform_apply
      changed_when: "'1 added' in terraform_apply.stdout"

    - name: remove tfvars
      ansible.builtin.raw: rm -f terraform.tfvars
      delegate_to: localhost

    - name: waiting for {{ inventory_hostname }} to be ready
      wait_for:
        host: "{{ inventory_hostname }}"
        port: 22
        state: started
        delay: 5
        timeout: 60
      delegate_to: localhost

    - name: remove previous SSH key
      ansible.builtin.raw: ssh-keygen -f ~/.ssh/known_hosts -R {{Â inventory_hostname }}
      delegate_to: localhost
      register: key_removal
      changed_when: "'not found in' not in key_removal.stderr"

    - name: allow new SSH key
      ansible.builtin.raw: ssh-keyscan -H {{ inventory_hostname }} >> ~/.ssh/known_hosts
      delegate_to: localhost

    - name: update index of available package(s)
      ansible.builtin.raw: apk update

    - name: check package(s) update(s)
      ansible.builtin.raw: apk version -l '<'
      changed_when: pkgs_output.stdout.splitlines()|length > 1
      failed_when: pkgs_output.stdout.splitlines()|length == 0
      register: pkgs_output

    - name: upgrading {{ pkgs_output.stdout.splitlines()|length - 1 }} package(s)
      ansible.builtin.raw: apk upgrade
      when: pkgs_output.stdout.splitlines()|length > 1

    - name: install traefik
      ansible.builtin.raw: apk add traefik

    - name: create acme directory
      ansible.builtin.raw: mkdir -m 0700 /etc/traefik-ssl; chown traefik:traefik /etc/traefik-ssl;

    - name: install python3 for templating
      ansible.builtin.raw: apk add --no-cache python3

    - name: generate traefik.yaml
      template:
        src: "traefik.yaml.j2"
        dest: "/etc/traefik/traefik.yaml"
        mode: 0644
        owner: traefik
        group: traefik

    - name: generate acme.json
      template:
        src: "acme.json.j2"
        dest: "/etc/traefik-ssl/acme.json"
        mode: 0600
        owner: traefik
        group: traefik

    - name: remove python3
      ansible.builtin.raw: apk del python3

    - name: remove previous env variables
      ansible.builtin.raw: sed -i -e '/^export /d' /etc/conf.d/traefik

    - name: pushing new env variables
      ansible.builtin.raw: echo -e "{{ env_vars }}" >> /etc/conf.d/traefik

    - name: update traefik permissions
      ansible.builtin.raw: chmod 0600 /etc/conf.d/traefik

    - name: starting traefik
      ansible.builtin.raw: rc-service traefik restart
